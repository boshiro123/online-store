package com.example.demo.Hash;

import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Scanner;

public class SHA256 {
    public static byte[] getSHA(String input) throws NoSuchAlgorithmException
    {
        // Static getInstance method is called with hashing SHA
        MessageDigest md = MessageDigest.getInstance("SHA-256");

        // digest() method called
        // to calculate message digest of an input
        // and return array of byte
        return md.digest(input.getBytes(StandardCharsets.UTF_8));
    }

    public static String toHexString(byte[] hash)
    {
        // Конвертируем массива byte в целочисленное представление
        BigInteger number = new BigInteger(1, hash);

        // Теперь преобразуем в шестнадцатеричную систему
        StringBuilder hexString = new StringBuilder(number.toString(16));

        // Pad with leading zeros
        while (hexString.length() < 64)
        {
            hexString.insert(0, '0');
        }

        return hexString.toString();
    }

    // Driver code
    public static void main(String args[])
    {
        Scanner scanner = new Scanner(System.in);
        String word = "";
        try
        {
            System.out.println("HashCode Generated by SHA-256 for:");

            while(!word.equals("kill")){
                System.out.print("Input: ");
                word = scanner.nextLine();
                System.out.println("Text: " + word + "\n SHA256: " + toHexString(getSHA(word)));
            }

        }
        // For specifying wrong message digest algorithms
        catch (NoSuchAlgorithmException e) {
            System.out.println("Exception thrown for incorrect algorithm: " + e);
        }
    }
}
